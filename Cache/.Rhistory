unit     <- pais[id]
zz       <- datu[id,]
zzc      <- diff(zz)
nonn     <- min( which(zzc > 0) )
tiempoA  <- dd[-(1:nonn)]
casosA   <- zzc[-(1:(nonn-1))]
casosaA  <- datu[id,-(1:nonn)]
N        <- length(tiempoA)
grafejesfijos <- list()
i             <- 0
for(MM in 192:N){
i       <- i+1
tiempo  <- tiempoA[1:MM]
casos   <- casosA[1:MM]
casosa  <- casosaA[1:MM]
dat2    <- data.frame(Unidad=unit, dateRep=tiempo, casos=casos,
casosa=casosa, pob=pob2018)
#bb      <- Gomp1(dat2)   # Gomp1 es la misma
h       <- 300 - i
aux     <- Gomp2(h, coe=bb$Coeficientes, sigma=bb$sigma, dfdato=bb$DatosId)
pred    <- aux$preds
VVar    <- aux$Mvarianza
GHH     <- 360
ggra    <- Gomp3X(h, pred, coe=bb$Coeficientes, dfdato=bb$DatosId, VV=VVar, GHH=GHH)
grafejesfijos[[i]] <- ggarrange(ggra$graf1,ggra$graf3, ncol = 1, nrow = 2)
}
#Columna time para simplificacion del modelo
nn       <- length(tiempo)
tt      <- 1:nn
Datos   <- cbind(dat2, Time = tt)
####################    Modelo Gompetz Acumulado    ####################
#Valores iniciales para las estimaciones
coe1  <-  10
coe2  <-  5
coe3  <-  0.1
esti.sp  <- nlsLM(casosa ~ coe1*exp(-coe2*exp(-coe3*Time)), start=list(coe1=coe1,coe2=coe2,coe3=coe3),data=Datos)
summary(esti.sp)
alpha   <- coefficients(esti.sp)[1]
beta    <- coefficients(esti.sp)[2]
kappa   <- coefficients(esti.sp)[3]
Gmpz    <-function(x)
{
alpha*exp(-beta*exp(-kappa*x))
}
AcuGmpz   <- ggplot(Datos, aes(tt, casosa)) + geom_point() + xlab("Tiempo") + ylab("Numero de casos acumulados") + ggtitle("Modelo Gompertz: Casos Acumulados en MÃ©xico")
AcuGmpz   <- AcuGmpz + stat_function(fun = Gmpz, colour = "red")
AcuGmpz
AcuGmpz2  <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casosa), linetype=1,size=.5,direction="hv") + xlab("Tiempo") + ylab("Casos diarios") + ggtitle("Modelo Gompertz: Casos diarios COVID en MÃ©xico")
AcuGmpz2  <- AcuGmpz2 + stat_function(fun = Gmpz, colour = "red", linetype=1,size=.9,direction="hv")
AcuGmpz2
##### Datos interesantes del modelo #####
# Cuantas personas infectadas hbra al final de la pandemia?
CMax  <- round(alpha)
library(ggplot2)
library(minpack.lm)
library(ggpubr)
library(MASS)
suppressPackageStartupMessages(library(tidyverse))
library(tidyverse)
library(ISLR)
library(sigmoid)
#Faltan las predicciones
#Falta checar los supuestos
#Modelaacion Normal
#Agregar los datos importantes
#comparacion de los modelos
####################    Datos    ####################
# Lectura de incidencia acumulada de casos
ff   <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master"
ff   <- paste(ff,"/csse_covid_19_data/csse_covid_19_time_series/",sep="")
ff   <- paste(ff,"time_series_covid19_confirmed_global.csv",sep="")
dat  <- read.csv2(ff,header=TRUE,sep=",")
dim(dat) # 266 x 151
nc   <- dim(dat)[2]
# Paises en la base de datos
pais <- unique(dat[,2])
np   <- length(pais)
# Colapsar provincias y tener un sÃƒÂ³lo registro por paÃƒ­s
# (primeras 4 columnas de dat contienen: Provincia, PaÃƒ­s, Lat, Lon)
datu <- matrix(0,np,nc-4)
for(i in 1:np){ datu[i,] <- colSums(dat[dat[,2]==pais[i],-(1:4)]) }
# PerÃƒ­odo de tiempo en la base de datos
pd   <- names(dat)[5]   # primer dÃƒ­a
nch  <- nchar(pd)
pdia <- as.Date( substr(pd,2,nch), format= "%m.%d.%y")
ud   <- names(dat)[nc]  # ÃƒÂºltimo dÃƒ­a
nch  <- nchar(ud)
udia <- as.Date( substr(ud,2,nch), format= "%m.%d.%y")
dd   <- seq.Date(from=pdia,to=udia,by=1) # secuencia de dÃƒ­as (no hay dÃƒ­as sin reporte)
nd   <- length(dd)
id      <- which(pais=="Mexico")
pob2018 <- 128932753             # PoblaciÃƒÂ³n actual
hab     <- pob2018
unit     <- pais[id]
zz       <- datu[id,]
zzc      <- diff(zz)
nonn     <- min( which(zzc > 0) )
tiempoA  <- dd[-(1:nonn)]
casosA   <- zzc[-(1:(nonn-1))]
casosaA  <- datu[id,-(1:nonn)]
N        <- length(tiempoA)
grafejesfijos <- list()
i             <- 0
for(MM in 192:N){
i       <- i+1
tiempo  <- tiempoA[1:MM]
casos   <- casosA[1:MM]
casosa  <- casosaA[1:MM]
dat2    <- data.frame(Unidad=unit, dateRep=tiempo, casos=casos,
casosa=casosa, pob=pob2018)
#bb      <- Gomp1(dat2)   # Gomp1 es la misma
h       <- 300 - i
aux     <- Gomp2(h, coe=bb$Coeficientes, sigma=bb$sigma, dfdato=bb$DatosId)
pred    <- aux$preds
VVar    <- aux$Mvarianza
GHH     <- 360
ggra    <- Gomp3X(h, pred, coe=bb$Coeficientes, dfdato=bb$DatosId, VV=VVar, GHH=GHH)
grafejesfijos[[i]] <- ggarrange(ggra$graf1,ggra$graf3, ncol = 1, nrow = 2)
}
#Columna time para simplificacion del modelo
nn       <- length(tiempo)
tt      <- 1:nn
Datos   <- cbind(dat2, Time = tt)
####################    Modelo Gompetz Acumulado    ####################
#Valores iniciales para las estimaciones
coe1  <-  10
coe2  <-  5
coe3  <-  0.1
esti.sp  <- nlsLM(casosa ~ coe1*exp(-coe2*exp(-coe3*Time)), start=list(coe1=coe1,coe2=coe2,coe3=coe3),data=Datos)
summary(esti.sp)
alpha   <- coefficients(esti.sp)[1]
beta    <- coefficients(esti.sp)[2]
kappa   <- coefficients(esti.sp)[3]
Gmpz    <-function(x)
{
alpha*exp(-beta*exp(-kappa*x))
}
AcuGmpz   <- ggplot(Datos, aes(tt, casosa)) + geom_point() + xlab("Tiempo") + ylab("Numero de casos acumulados") + ggtitle("Modelo Gompertz: Casos Acumulados en MÃ©xico")
AcuGmpz   <- AcuGmpz + stat_function(fun = Gmpz, colour = "red")
AcuGmpz
AcuGmpz2  <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casosa), linetype=1,size=.5,direction="hv") + xlab("Tiempo") + ylab("Casos diarios") + ggtitle("Modelo Gompertz: Casos diarios COVID en MÃ©xico")
AcuGmpz2  <- AcuGmpz2 + stat_function(fun = Gmpz, colour = "red", linetype=1,size=.9,direction="hv")
AcuGmpz2
##### Datos interesantes del modelo #####
# Cuantas personas infectadas hbra al final de la pandemia?
CMax  <- round(alpha)
CMax
library(ggplot2)
library(minpack.lm)
library(ggpubr)
library(MASS)
suppressPackageStartupMessages(library(tidyverse))
library(tidyverse)
library(ISLR)
library(MLmetrics)
library(survival)
library(fitdistrplus)
library(stats)
#Modelacion Normal Full
#Cota del 95% para Normal
####################    Datos    ####################
# Lectura de incidencia acumulada de casos
Diasiniciopand <- 196
ff   <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master"
ff   <- paste(ff,"/csse_covid_19_data/csse_covid_19_time_series/",sep="")
ff   <- paste(ff,"time_series_covid19_confirmed_global.csv",sep="")
dat  <- read.csv2(ff,header=TRUE,sep=",")
dim(dat) # 266 x 151
nc   <- dim(dat)[2]
# Paises en la base de datos
pais <- unique(dat[,2])
np   <- length(pais)
# Colapsar provincias y tener un sÃƒÂ³lo registro por paÃƒ­s
# (primeras 4 columnas de dat contienen: Provincia, PaÃƒ­s, Lat, Lon)
datu <- matrix(0,np,nc-4)
for(i in 1:np){ datu[i,] <- colSums(dat[dat[,2]==pais[i],-(1:4)]) }
# PerÃƒ­odo de tiempo en la base de datos
pd   <- names(dat)[5]   # primer dÃƒ­a
nch  <- nchar(pd)
pdia <- as.Date( substr(pd,2,nch), format= "%m.%d.%y")
ud   <- names(dat)[nc]  # ÃƒÂºltimo dÃƒ­a
nch  <- nchar(ud)
udia <- as.Date( substr(ud,2,nch), format= "%m.%d.%y")
dd   <- seq.Date(from=pdia,to=udia,by=1) # secuencia de dÃƒ­as (no hay dÃƒ­as sin reporte)
nd   <- length(dd)
id      <- which(pais=="Mexico")
pob2018 <- 128932753             # PoblaciÃƒÂ³n actual
hab     <- pob2018
unit     <- pais[id]
zz       <- datu[id,]
zzc      <- diff(zz)
nonn     <- min( which(zzc > 0) )
tiempoA  <- dd[-(1:nonn)]
casosA   <- zzc[-(1:(nonn-1))]
casosaA  <- datu[id,-(1:nonn)]
N        <- length(tiempoA)
grafejesfijos <- list()
i             <- 0
for(MM in Diasiniciopand:N){
i       <- i+1
tiempo  <- tiempoA[1:MM]
casos   <- casosA[1:MM]
casosa  <- casosaA[1:MM]
dat2    <- data.frame(Unidad=unit, dateRep=tiempo, casos=casos,
casosa=casosa, pob=pob2018)
#bb      <- Gomp1(dat2)   # Gomp1 es la misma
h       <- 300 - i
aux     <- Gomp2(h, coe=bb$Coeficientes, sigma=bb$sigma, dfdato=bb$DatosId)
pred    <- aux$preds
VVar    <- aux$Mvarianza
GHH     <- 360
ggra    <- Gomp3X(h, pred, coe=bb$Coeficientes, dfdato=bb$DatosId, VV=VVar, GHH=GHH)
grafejesfijos[[i]] <- ggarrange(ggra$graf1,ggra$graf3, ncol = 1, nrow = 2)
}
#Columna time para simplificacion del modelo
nn       <- length(tiempo)
tt      <- 1:nn
Datos   <- cbind(dat2, Time = tt)
fechau <- tail(Datos$dateRep,1)
paisn       <- (Datos$Unidad)[1]
casosu <- tail(Datos$casosa,1)
casosf <- format( casosu, big.mark = ",")
A <-  1
B <-  50
P <-  1000
esti.spnf  <- nlsLM(casos ~ (P*A*exp(-A^2*(Time-B)^2))/(sqrt(pi)), start=list(A=A,B=B, P=P),data=Datos)
esti.spnf  <- nls(casos ~ (P*A*exp(-A^2*(Time-B)^2))/(sqrt(pi)), start=list(A=A,B=B, P=P),data=Datos)
summary(esti.spnf)
A <-  1
B <-  5
P <-  1000
esti.spnf  <- nls(casos ~ (P*A*exp(-A^2*(Time-B)^2))/(sqrt(pi)), start=list(A=A,B=B, P=P),data=Datos)
summary(esti.spnf)
aF  <- coefficients(esti.spnf)[1]
bF  <- coefficients(esti.spnf)[2]
pF  <- coefficients(esti.spnf)[3]
NomF    <-function(x)
{
(pF*aF*exp(-aF^2*(x-bF)^2))/(sqrt(pi))
}
FullNom   <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casos), linetype=1,size=.5,direction="hv") + xlab("Tiempo") + ylab("Casos diarios") + ggtitle("Modelo Logistico: Casos diarios COVID en MÃ©xico")
FullNom   <- FullNom + stat_function(fun = NomF, colour = "blue", linetype=1,size=1)
FullNom
#Valores iniciales para las estimaciones
a <-  1
b <-  50
p <-  10000
esti.spn  <- nlsLM(casosa ~ (p/2)*pnorm(a*(Time-b)), start=list(a=a,b=b, p=p),data=Datos)
summary(esti.spn)
af  <- coefficients(esti.spn)[1]
bf  <- coefficients(esti.spn)[2]
pf  <- coefficients(esti.spn)[3]
Nom    <-function(x)
{
(pf/2)*pnorm(af*(x-bf))
}
##### Datos interesantes del modelo Normal #####
# Cuantas personas infectadas habra al final de la pandemia?
CMaxN  <- round(pf/2)
#No esta listo aun para el modelo Normal
# Cuando va a ser el pico?
PMaxNsr  <- log(gamma1)/gamma2
PMaxN    <- round(PMaxNsr)
#Que fecha?
FMaxN  <- tiempo[1] + PMaxN
#cuantos casos se esperaban en tal fecha?
CPMaxN  <- gamma0/(1+gamma1*exp(-gamma2*PMaxL))
CaMaxiN <- round(CPMaxN)
#En que fecha llegara al 95% del maximo PMaxL?
tDuracionN   <- round(-log(-log(cota)/gamma1)/gamma2)     #Esta mal el calculo
fDuracionN   <- tiempo[1] + tDuracionN
#AcuNom   <- ggplot(Datos, aes(tt, casosa)) + geom_point() + xlab("Tiempo") + ylab("Numero de casos acumulados") +
#            ggtitle(paste("Modelo Normal,",paisn,":",fechau,"Casos acumulados = ",casosf," \n ( Total Predichos ",CMaxN,")"))
#AcuNom   <- AcuNom + stat_function(fun = Nom, colour = "gold")
#AcuNom
AcuNom2  <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casosa), linetype=1,size=.7,) + xlab("Tiempo") +
ylab("Casos diarios") + ggtitle(paste("Modelo Normal,",paisn,":",fechau,"Casos acumulados = ",casosf,"
( Total Predichos ",CMaxN,")")) + stat_function(fun = Gmpz, colour = "gold", linetype=1,size=.9)
AcuNom2
View(Datos)
####################    Datos    ####################
# Lectura de incidencia acumulada de casos
Diasiniciopand <- 198
ff   <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master"
ff   <- paste(ff,"/csse_covid_19_data/csse_covid_19_time_series/",sep="")
ff   <- paste(ff,"time_series_covid19_confirmed_global.csv",sep="")
dat  <- read.csv2(ff,header=TRUE,sep=",")
dim(dat) # 266 x 151
nc   <- dim(dat)[2]
# Paises en la base de datos
pais <- unique(dat[,2])
np   <- length(pais)
# Colapsar provincias y tener un sÃƒÂ³lo registro por paÃƒ­s
# (primeras 4 columnas de dat contienen: Provincia, PaÃƒ­s, Lat, Lon)
datu <- matrix(0,np,nc-4)
for(i in 1:np){ datu[i,] <- colSums(dat[dat[,2]==pais[i],-(1:4)]) }
# PerÃƒ­odo de tiempo en la base de datos
pd   <- names(dat)[5]   # primer dÃƒ­a
nch  <- nchar(pd)
pdia <- as.Date( substr(pd,2,nch), format= "%m.%d.%y")
ud   <- names(dat)[nc]  # ÃƒÂºltimo dÃƒ­a
nch  <- nchar(ud)
udia <- as.Date( substr(ud,2,nch), format= "%m.%d.%y")
dd   <- seq.Date(from=pdia,to=udia,by=1) # secuencia de dÃƒ­as (no hay dÃƒ­as sin reporte)
nd   <- length(dd)
id      <- which(pais=="Mexico")
pob2018 <- 128932753             # PoblaciÃƒÂ³n actual
hab     <- pob2018
unit     <- pais[id]
zz       <- datu[id,]
zzc      <- diff(zz)
nonn     <- min( which(zzc > 0) )
tiempoA  <- dd[-(1:nonn)]
casosA   <- zzc[-(1:(nonn-1))]
casosaA  <- datu[id,-(1:nonn)]
N        <- length(tiempoA)
grafejesfijos <- list()
i             <- 0
for(MM in Diasiniciopand:N){
i       <- i+1
tiempo  <- tiempoA[1:MM]
casos   <- casosA[1:MM]
casosa  <- casosaA[1:MM]
dat2    <- data.frame(Unidad=unit, dateRep=tiempo, casos=casos,
casosa=casosa, pob=pob2018)
#bb      <- Gomp1(dat2)   # Gomp1 es la misma
h       <- 300 - i
aux     <- Gomp2(h, coe=bb$Coeficientes, sigma=bb$sigma, dfdato=bb$DatosId)
pred    <- aux$preds
VVar    <- aux$Mvarianza
GHH     <- 360
ggra    <- Gomp3X(h, pred, coe=bb$Coeficientes, dfdato=bb$DatosId, VV=VVar, GHH=GHH)
grafejesfijos[[i]] <- ggarrange(ggra$graf1,ggra$graf3, ncol = 1, nrow = 2)
}
#Columna time para simplificacion del modelo
nn       <- length(tiempo)
tt      <- 1:nn
Datos   <- cbind(dat2, Time = tt)
fechau <- tail(Datos$dateRep,1)
paisn       <- (Datos$Unidad)[1]
casosu <- tail(Datos$casosa,1)
casosf <- format( casosu, big.mark = ",")
View(Datos)
####################    Datos    ####################
# Lectura de incidencia acumulada de casos
Diasiniciopand <- 196
ff   <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master"
ff   <- paste(ff,"/csse_covid_19_data/csse_covid_19_time_series/",sep="")
ff   <- paste(ff,"time_series_covid19_confirmed_global.csv",sep="")
dat  <- read.csv2(ff,header=TRUE,sep=",")
dim(dat) # 266 x 151
nc   <- dim(dat)[2]
# Paises en la base de datos
pais <- unique(dat[,2])
np   <- length(pais)
# Colapsar provincias y tener un sÃƒÂ³lo registro por paÃƒ­s
# (primeras 4 columnas de dat contienen: Provincia, PaÃƒ­s, Lat, Lon)
datu <- matrix(0,np,nc-4)
for(i in 1:np){ datu[i,] <- colSums(dat[dat[,2]==pais[i],-(1:4)]) }
# PerÃƒ­odo de tiempo en la base de datos
pd   <- names(dat)[5]   # primer dÃƒ­a
nch  <- nchar(pd)
pdia <- as.Date( substr(pd,2,nch), format= "%m.%d.%y")
ud   <- names(dat)[nc]  # ÃƒÂºltimo dÃƒ­a
nch  <- nchar(ud)
udia <- as.Date( substr(ud,2,nch), format= "%m.%d.%y")
dd   <- seq.Date(from=pdia,to=udia,by=1) # secuencia de dÃƒ­as (no hay dÃƒ­as sin reporte)
nd   <- length(dd)
id      <- which(pais=="Mexico")
pob2018 <- 128932753             # PoblaciÃƒÂ³n actual
hab     <- pob2018
unit     <- pais[id]
zz       <- datu[id,]
zzc      <- diff(zz)
nonn     <- min( which(zzc > 0) )
tiempoA  <- dd[-(1:nonn)]
casosA   <- zzc[-(1:(nonn-1))]
casosaA  <- datu[id,-(1:nonn)]
N        <- length(tiempoA)
grafejesfijos <- list()
i             <- 0
for(MM in Diasiniciopand:N){
i       <- i+1
tiempo  <- tiempoA[1:MM]
casos   <- casosA[1:MM]
casosa  <- casosaA[1:MM]
dat2    <- data.frame(Unidad=unit, dateRep=tiempo, casos=casos,
casosa=casosa, pob=pob2018)
#bb      <- Gomp1(dat2)   # Gomp1 es la misma
h       <- 300 - i
aux     <- Gomp2(h, coe=bb$Coeficientes, sigma=bb$sigma, dfdato=bb$DatosId)
pred    <- aux$preds
VVar    <- aux$Mvarianza
GHH     <- 360
ggra    <- Gomp3X(h, pred, coe=bb$Coeficientes, dfdato=bb$DatosId, VV=VVar, GHH=GHH)
grafejesfijos[[i]] <- ggarrange(ggra$graf1,ggra$graf3, ncol = 1, nrow = 2)
}
#Columna time para simplificacion del modelo
nn       <- length(tiempo)
tt      <- 1:nn
Datos   <- cbind(dat2, Time = tt)
fechau <- tail(Datos$dateRep,1)
paisn       <- (Datos$Unidad)[1]
casosu <- tail(Datos$casosa,1)
casosf <- format( casosu, big.mark = ",")
####################    Modelo Gompetz Acumulado    ####################
#Valores iniciales para las estimaciones
coe1  <-  10
coe2  <-  5
coe3  <-  0.1
esti.sp  <- nlsLM(casosa ~ coe1*exp(-coe2*exp(-coe3*Time)), start=list(coe1=coe1,coe2=coe2,coe3=coe3),data=Datos)
summary(esti.sp)
alpha   <- coefficients(esti.sp)[1]
beta    <- coefficients(esti.sp)[2]
kappa   <- coefficients(esti.sp)[3]
Gmpz    <-function(x)
{
alpha*exp(-beta*exp(-kappa*x))
}
##### Datos interesantes del modelo Gompertz #####
# Cuantas personas infectadas habra al final de la pandemia?
CMax  <- round(alpha)
# Cuando va a ser el pico?
PMaxsr  <- log(beta)/kappa
PMax    <- round(PMaxsr)
#Que fecha?
FMax  <- tiempo[1] + PMax
#cuantos casos se esperaban en tal fecha?
CPMax <- alpha*exp(-beta*exp(-kappa*PMax))
CaMaxi<- round(CPMax)
#En que fecha llegara al 95% del maximo total?
cota        <- 0.95
tDuracion   <- round(-log(-log(cota)/beta)/kappa)
fDuracion   <- tiempo[1] + tDuracion
#AcuGmpz   <- ggplot(Datos, aes(tt, casosa)) + geom_point() + xlab("Tiempo") + ylab("Numero de casos acumulados") +
#             ggtitle(paste("Modelo Gompertz,",paisn,":",fechau,"Casos acumulados = ",casosf," \n ( Total Predichos ",CMax,")"))
#AcuGmpz   <- AcuGmpz + stat_function(fun = Gmpz, colour = "red")
AcuGmpz2  <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casosa), linetype=1,size=.7) + xlab("Tiempo") +
ylab("Casos diarios") + ggtitle(paste("Modelo Gompertz,",paisn,":",fechau,"Casos acumulados = ",casosf,"
( Total Predichos ",CMax,")")) + stat_function(fun = Gmpz, colour = "red", linetype=1,size=.9)
AcuGmpz2
##### Calclulo de los errores del modelo #####
#Errores del modelo acumulado
ErrorGmpzA   <- replicate(Diasiniciopand, 0)
ValorModA    <- replicate(Diasiniciopand, 0)
ValoresA   <- Datos$casosa
for (i in 0:Diasiniciopand)
{
ValorModA[i] <- alpha*exp(-beta*exp(-kappa*i))
}
ErrorGmpzA   <- ValorModA - ValoresA
# MSE
MSEGA = 0
for (i in 1:length(ErrorGmpzA))
{
MSEGA = MSEGA + (ErrorGmpzA[i])^2
}
MSEGA     <- MSEGA/Diasiniciopand
MSEGA
# RMSE
RMSEGA      <- sqrt(MSEGA)
RMSEGA
# MAE
MAEGA = 0
for (i in 1:length(ErrorGmpzA))
{
MAEGA = MAEGA + abs(ErrorGmpzA[i])
}
MAEGA     <- MAEGA/Diasiniciopand
MAEGA
####################    Modelo Gompetz    ####################
#Valores iniciales para las estimaciones
coe1f  <-  10
coe2f  <-  5
coe3f  <-  0.1
estig  <- nlsLM(casos ~ coe1f*exp(-coe2f*exp(-coe3f*Time))*coe2f*coe3f*exp(-coe3f*Time), start=list(coe1f=coe1f,coe2f=coe2f,coe3f=coe3f),data=Datos)
summary(estig)
AlphaF   <- coefficients(estig)[1]
BetaF    <- coefficients(estig)[2]
KappaF   <- coefficients(estig)[3]
GmpzF    <-function(x)
{
AlphaF*exp(-BetaF*exp(-KappaF*x))*BetaF*KappaF*exp(-KappaF*x)
}
yendp      <- AlphaF*exp(-BetaF*exp(-KappaF*PMax))*BetaF*KappaF*exp(-KappaF*PMax)
yend9      <- AlphaF*exp(-BetaF*exp(-KappaF*tDuracion))*BetaF*KappaF*exp(-KappaF*tDuracion)
GmpzFull  <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casos), linetype=1,size=.5,direction="hv") + xlab("Tiempo") +
ylab("Casos diarios") + ggtitle(paste("Modelo Gompertz: Casos diarios COVID en" ,paisn, "\nCasos Acum Pico" ,CaMaxi))
GmpzFull  <- GmpzFull + stat_function(fun = GmpzF, colour = "red", linetype=1,size=1) + geom_text(x=PMax,y=0,label=FMax) +
geom_text(x=tDuracion,y=0,label=fDuracion) + geom_segment(aes(x= PMax, y=0, xend= PMax, yend= yendp), colour= "orange",
linetype=1,size=1) + geom_segment(aes(x= tDuracion, y=0, xend= tDuracion, yend= yend9), colour= "orange", linetype=1,size=1)
GmpzFull
#Valores iniciales para las estimaciones
A <-  1
B <-  5
P <-  1000
esti.spnf  <- nls(casos ~ (P*A*exp(-A^2*(Time-B)^2))/(sqrt(pi)), start=list(A=A,B=B, P=P),data=Datos)
summary(esti.spnf)
aF  <- coefficients(esti.spnf)[1]
bF  <- coefficients(esti.spnf)[2]
pF  <- coefficients(esti.spnf)[3]
NomF    <-function(x)
{
(pF*aF*exp(-aF^2*(x-bF)^2))/(sqrt(pi))
}
FullNom   <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casos), linetype=1,size=.5,direction="hv") + xlab("Tiempo") + ylab("Casos diarios") + ggtitle("Modelo Logistico: Casos diarios COVID en MÃ©xico")
FullNom   <- FullNom + stat_function(fun = NomF, colour = "blue", linetype=1,size=1)
FullNom
FullNom   <- ggplot(Datos) + geom_step(mapping=aes(x=tt,y=casos), linetype=1,size=.5,direction="hv") +
xlab("Tiempo") + ylab("Casos diarios") + ggtitle("Modelo Normal: Casos diarios COVID en MÃ©xico")
FullNom   <- FullNom + stat_function(fun = NomF, colour = "blue", linetype=1,size=1)
FullNom
